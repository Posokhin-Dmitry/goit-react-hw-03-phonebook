{"version":3,"sources":["components/ContactForm/ContactForm.module.css","App.module.css","components/Filter/Filter.module.css","components/ContactItem/ContactItem.module.css","components/ContactList/ContactList.module.css","components/ContactForm/ContactForm.js","components/ContactItem/ContactItem.js","components/ContactList/ContactList.js","components/Filter/Filter.js","App.js","index.js"],"names":["module","exports","ContactForm","state","name","number","handleChange","event","currentTarget","value","setState","handleSubmit","preventDefault","props","onSubmit","reset","this","className","s","form","formLabel","type","pattern","title","required","onChange","formInput","handleAddContact","button","Component","ContactItem","id","onDeleteContact","item","deleteButton","onClick","ContactList","contacts","list","map","Filter","filter","filterBox","filterTitle","filterInput","App","data","newContact","uuidv4","contact","toLowerCase","includes","alert","prevState","handleFilter","getMatchingContacts","optimizedFilter","deleteContact","contactId","parsedContacts","JSON","parse","localStorage","getItem","setItem","stringify","filteredContacts","container","section","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b7eef1d9.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__2Cmje\",\"formLabel\":\"ContactForm_formLabel__-JeW_\",\"formInput\":\"ContactForm_formInput__3zsUU\",\"button\":\"ContactForm_button__2fC6C\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__GotAN\",\"section\":\"App_section__2YtdA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"filterBox\":\"Filter_filterBox__1GY5E\",\"filterTitle\":\"Filter_filterTitle__2QzIG\",\"filterInput\":\"Filter_filterInput__3tGJe\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"ContactItem_item__qrFoX\",\"deleteButton\":\"ContactItem_deleteButton__iyJz1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ContactList_list__gV0eW\"};","import { Component } from 'react';\r\nimport s from './ContactForm.module.css';\r\n\r\nclass ContactForm extends Component {\r\n  state = {\r\n    name: '',\r\n    number: '',\r\n  };\r\n\r\n  handleChange = event => {\r\n    const { name, value } = event.currentTarget;\r\n\r\n    this.setState({ [name]: value });\r\n  };\r\n\r\n  handleSubmit = event => {\r\n    event.preventDefault();\r\n\r\n    this.props.onSubmit(this.state);\r\n    this.reset();\r\n  };\r\n\r\n  reset = () => {\r\n    this.setState({\r\n      name: '',\r\n      number: '',\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <form onSubmit={this.handleSubmit} className={s.form}>\r\n        <label className={s.formLabel}>\r\n          Name\r\n          <input\r\n            type=\"text\"\r\n            name=\"name\"\r\n            value={this.state.name}\r\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n            required\r\n            onChange={this.handleChange}\r\n            className={s.formInput}\r\n          />\r\n        </label>\r\n\r\n        <label className={s.formLabel}>\r\n          Number\r\n          <input\r\n            type=\"tel\"\r\n            name=\"number\"\r\n            value={this.state.number}\r\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n            title=\"Номер телефона должен состоять из 11-12 цифр и может содержать цифры, пробелы, тире, пузатые скобки и может начинаться с +\"\r\n            required\r\n            onChange={this.handleChange}\r\n            className={s.formInput}\r\n          />\r\n        </label>\r\n\r\n        <button\r\n          type=\"submit\"\r\n          onSubmit={this.handleAddContact}\r\n          className={s.button}\r\n        >\r\n          Add contact\r\n        </button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ContactForm;\r\n","import s from './ContactItem.module.css';\r\n\r\nconst ContactItem = ({ id, name, number, onDeleteContact }) => (\r\n  <li className={s.item} key={id}>\r\n    {name}: &nbsp;{number}\r\n    <button className={s.deleteButton} onClick={() => onDeleteContact(id)}>\r\n      Delete\r\n    </button>\r\n  </li>\r\n);\r\n\r\nexport default ContactItem;\r\n","import PropTypes from 'prop-types';\r\nimport s from './ContactList.module.css';\r\nimport ContactItem from '../ContactItem/ContactItem';\r\n\r\nconst ContactList = ({ contacts, onDeleteContact }) => (\r\n  <ul className={s.list}>\r\n    {contacts.map(({ name, id, number }) => (\r\n      <ContactItem\r\n        key={id}\r\n        id={id}\r\n        name={name}\r\n        number={number}\r\n        onDeleteContact={onDeleteContact}\r\n      />\r\n    ))}\r\n  </ul>\r\n);\r\n\r\nContactList.propTypes = {\r\n  contacts: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      name: PropTypes.string.isRequired,\r\n      id: PropTypes.string.isRequired,\r\n      number: PropTypes.string.isRequired,\r\n    }),\r\n  ),\r\n  onDeleteContact: PropTypes.func,\r\n};\r\n\r\nexport default ContactList;\r\n","import PropTypes from 'prop-types';\r\nimport s from './Filter.module.css';\r\n\r\nconst Filter = ({ filter, onChange }) => {\r\n  return (\r\n    <div className={s.filterBox}>\r\n      <p className={s.filterTitle}>Find contacts by name</p>\r\n      <input\r\n        className={s.filterInput}\r\n        type=\"text\"\r\n        value={filter}\r\n        onChange={onChange}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nFilter.propTypes = {\r\n  filter: PropTypes.string,\r\n  onChange: PropTypes.func,\r\n};\r\n\r\nexport default Filter;\r\n","import React, { Component } from 'react';\r\nimport s from './App.module.css';\r\nimport ContactForm from './components/ContactForm/ContactForm';\r\nimport ContactList from './components/ContactList/ContactList';\r\nimport Filter from './components/Filter/Filter';\r\nimport { v4 as uuidv4 } from 'uuid';\r\n\r\nclass App extends Component {\r\n  state = {\r\n    contacts: [\r\n      { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\r\n      { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\r\n      { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\r\n      { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\r\n    ],\r\n    filter: '',\r\n  };\r\n\r\n  componentDidMount() {\r\n    const parsedContacts = JSON.parse(localStorage.getItem('contacts'));\r\n\r\n    parsedContacts && this.setState({ contacts: parsedContacts });\r\n  }\r\n\r\n  componentDidUpdate(prevState) {\r\n    this.state.contacts !== prevState.contacts &&\r\n      localStorage.setItem('contacts', JSON.stringify(this.state.contacts));\r\n  }\r\n\r\n  handleAddContact = data => {\r\n    const { contacts } = this.state;\r\n    const newContact = { ...data, id: uuidv4() };\r\n\r\n    if (\r\n      contacts\r\n        .map(contact => contact.name.toLowerCase())\r\n        .includes(data.name.toLowerCase())\r\n    ) {\r\n      alert(`Contact \"${data.name}\" already exists`);\r\n    } else {\r\n      this.setState(prevState => ({\r\n        contacts: [newContact, ...prevState.contacts],\r\n      }));\r\n    }\r\n  };\r\n\r\n  handleFilter = event => {\r\n    const { value } = event.currentTarget;\r\n    this.setState({ filter: value });\r\n  };\r\n\r\n  getMatchingContacts = () => {\r\n    const { contacts, filter } = this.state;\r\n\r\n    const optimizedFilter = filter.toLowerCase();\r\n\r\n    return contacts.filter(contact =>\r\n      contact.name.toLowerCase().includes(optimizedFilter),\r\n    );\r\n  };\r\n\r\n  deleteContact = contactId => {\r\n    this.setState(prevState => ({\r\n      contacts: prevState.contacts.filter(contact => contact.id !== contactId),\r\n    }));\r\n  };\r\n\r\n  render() {\r\n    const { filter } = this.state;\r\n    const filteredContacts = this.getMatchingContacts();\r\n\r\n    return (\r\n      <div className={s.container}>\r\n        <section title=\"Phonebook\" className={s.section}>\r\n          <h1>Phonebook</h1>\r\n          <ContactForm onSubmit={this.handleAddContact} />\r\n        </section>\r\n\r\n        <section title=\"Contacts\" className={s.section}>\r\n          <h2>Contacts</h2>\r\n          <Filter value={filter} onChange={this.handleFilter} />\r\n          <ContactList\r\n            contacts={filteredContacts}\r\n            onDeleteContact={this.deleteContact}\r\n          />\r\n        </section>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport 'modern-normalize/modern-normalize.css';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root'),\r\n);\r\n"],"sourceRoot":""}